# This is a basic workflow to help you get started with Actions

name: Go

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
   
env:
  APP_DB_USERNAME: postgres
  APP_DB_PASSWORD: admin
  APP_DB_NAME: postgres
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build:
    name: Build and Test Code
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    # Start postgresql docker container
    - name: Start postgresql Container
      run: docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=${APP_DB_PASSWORD} -e POSTGRES_USER=${APP_DB_USERNAME} -e POSTGRES_DB=${APP_DB_NAME} -d postgres

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  Docker_Build_and_Publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-first-image:latest,${{ secrets.DOCKERHUB_USERNAME }}/my-first-image:${{ steps.vars.outputs.sha_short }}

  sonarCloud:
  
      needs: build
      name: SonarCloud Code Analysis
      runs-on: ubuntu-latest
  
      steps:
        - uses: actions/checkout@v4
          with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
            fetch-depth: 0
        
        - uses: sonarsource/sonarcloud-github-action@master
          with:
            args: >
              -Dsonar.organization=abduekoc
              -Dsonar.projectKey=AbdueKoc_KOC_CICD
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.TokenForSonar }}
